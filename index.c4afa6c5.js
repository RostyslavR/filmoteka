function t(t){return t&&t.__esModule?t.default:t}var e={gallery:document.querySelector(".main-gallery"),pagination:document.querySelector(".pagination")},a={};Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(t,e,a){e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a;return t};const n=new class{async getMovies(t=1){this.qOptions.set("page",t);const e=`${this.BASE_URL}${this.ENDPOINT}?${this.qOptions}`;return(await fetch(e)).json()}constructor(){t(a)(this,"BASE_URL","https://api.themoviedb.org/3"),t(a)(this,"KEY_API","dc4940972c268b026150cf7be6f01d11"),t(a)(this,"ENDPOINT","/trending/movie/day"),t(a)(this,"qOptions",new URLSearchParams({api_key:this.KEY_API}))}},i=new class{render(t){console.log(t);let e=t.reduce(((t,e)=>(e.backdrop_path&&(t+=function(t){const e=`https://image.tmdb.org/t/p/original${t.poster_path}`,a=t.title,n=t.genre_ids.map((t=>t)).join(","),i=t.release_date,s=t.vote_average;return`\n    <li class="gallery-item">\n    <img class="item-img" src="${e}" alt="${a}" loading="lazy"/>\n    <p class="item-title">${a}</p>\n    <div class="item-data">\n    <p class="item-genre">${n}</p>\n    <p class="item-data">${i}</p>\n    <p class="item-rating">${s}</p>\n    </div>\n    </li>\n    `}(e)),t)),"");e=`\n    <ul class="gallery-list">\n    ${e}\n    </ul>\n    `,this.ref.innerHTML=e}constructor(t){this.ref=t}}(e.gallery),s=new class{on(t,e){this.currentPage=Number(t),this.totalPages=Number(e),this.makeMarkUp(),this.ref.addEventListener("click",this.handlePagination)}makeMarkUp(){let t=0,e=0;this.totalPages>7&&(t=this.currentPage-2>1?this.currentPage-2:this.currentPage-1,e=this.currentPage+2<this.totalPages?this.currentPage+2:this.currentPage+1);let a="";for(let n=1;n<=this.totalPages;n+=1)(1===n||n>=t&&n<=e||n===this.totalPages)&&(n!==this.currentPage?a+=`<li class="pagination-page" ><a href="#" data-num="${n}">${n}</a></li>`:a+=`<li class="pagination-page current-page" ><a href="#" data-num="${n}">${n}</a></li>`);a=`\n  <ul class="pagination-list">\n  <a href="#" class="pagination-page" data-num="prev"><<</a>\n  ${a}\n  <a href="#" class="pagination-page" data-num="next">>></a>\n  </ul>\n  `,this.ref.innerHTML=a}constructor(e,n){t(a)(this,"handlePagination",(t=>{if("A"===t.target.nodeName){switch(this.ref.removeEventListener("click",this.handlePagination),t.target.dataset.num){case"prev":this.currentPage>1?this.currentPage-=1:this.currentPage;break;case"next":this.currentPage<this.totalPages?this.currentPage+=1:this.currentPage;break;default:this.currentPage=Number(t.target.dataset.num)}this.onPage(this.currentPage)}})),this.ref=e,this.onPage=n,this.currentPage=0,this.totalPages=0}}(e.pagination,(function(t){!async function(t=1){const e=await n.getMovies(t);i.render(e.results),s.on(e.page,e.total_pages)}(t)}));
//# sourceMappingURL=index.c4afa6c5.js.map
